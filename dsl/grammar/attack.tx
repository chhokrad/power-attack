PowerAttackModel:
    'Begin setup phase' 
        case_file=Case_file 
        setup_configs*=Setup_config[','] 
    'End setup phase'
    ('Begin preconditions' 
        preconditions*=Precondition_config[',']
    'End preconditions')?
    ('Begin attack scenarios'
        attack_scenarios+=Attack_scenario[',']
    'End attack scenarios')?
    
;
Deterministic_scalar:
    (NUMBER | FLOAT | STRING)
;

Primitive_pair:
    (key=Deterministic_scalar ':' val=Deterministic_scalar)
;

Probablistic_scalar:
    '(' distribution=Distribution_type ',' '{' params+=Primitive_pair[','] '}' ')'
;

Distribution_type:
    ('Uniform' | 'Discrete-Uniform' | 'Gaussian' | 'Discrete-Gaussian')
;

Scalar:
    (Deterministic_scalar | Probablistic_scalar)
;

Vector:
    '(' real=Scalar ',' imag=Scalar ')'
;

Value:
    (Scalar | Vector)
;

Pair:
    (key=STRING ':' val=Value)
;

Time:
    '@ time' Value
;


Case_file:
    'Case :' case_file=STRING
;

Setup_config:
    'Setup ' (Breaker_config | Relay_config | Controller_config | Tracer_config | Simulator_config | Generator_config)
;

Breaker_config:
    'breaker @ ' id=Branch_type 'with' '{' params+=Pair[','] '}'
;

Relay_config:
     type=Relay_type 'relay @ ' id=Branch_type  'with' '{' params+=Pair[','] '}'
;

Relay_type:
    ('over-current' | 'distance' ) 
;

Bus_type:
    'bus ' id=Deterministic_scalar
;

Branch_type:
    'branch between' to_bus=Bus_type 'and' from_bus=Bus_type
;

Controller_config:
    'lfc in generator @ ' id=Bus_type 'with' '{' params+=Pair[','] '}'
;

Tracer_config:
    'trace of' metrics+=Metric_type[',']
;

Metric_type:
    ('bus voltages' | 'power flows' | 'islands' | 'load-loss' | 'generator frequency')
;

Simulator_config:
    'simulation' 'with' '{' params+=Pair[','] '}'
;

Generator_config:
    'generator @ ' id=Bus_type 'with' '{' params+=Pair[','] '}'
;

Precondition_config:
   (Load_change | Trip_node | Fault_injection)
;

Load_change:
    'Change load on ' id=Bus_type 'to' val=Value time=Time
;

Trip_node:
    'Trip' id=Node time=Time
;

Node:
    (Bus_type | Branch_type)
;

Fault_injection:
    'Inject fault in ' id=Node time=Time
;


Attack_scenario:
    label=ID ':' '<' attack_sequence+=Attack[','] '>' 
;

Attack:
    'Attack' element=Attack_type time=Time
;

Attack_type:
    (Generator_attack | Relay_attack | Breaker_attack)  
;

Generator_attack:
    'lfc in generator @ ' id=Bus_type 'with' type= Generator_attack_type 'attack' 'of' factor=Scalar
;

Generator_attack_type:
    ('scaling' | 'biasing')
;

Relay_attack:
    kind=Relay_type 'relay @ ' id=Branch_type   'with' type=Relay_attack_type 'attack'
;

Relay_attack_type:
    ('missed' | 'spurious')
;

Breaker_attack:
    'breaker @' id=Branch_type 'with' type=Breaker_attack_type 'attack'
;

Breaker_attack_type:
    ('stuck open' | 'stuck close')
;
