PowerAttackModel:
    'begin setup' 
        case\_file=CaseFile 
        setup\_configs*=Setup\_config 
    'end setup'
    'begin precondition' 
        precondition*=Precondition\_configs
    'end precondition'
    'begin attack scenarios'
        attack\_scenarios+=Attack\_scenario
    'end attack scenarios'
; \\

KeyValue\_pair: '{' key=ID ',' value=FLOAT '}' ; \\
Composite\_key\_pair: '{' key=ID ',' value=Composite\_type '}' ; \\
Composite\_type: FLOAT | Random ; \\
Random: '(' 'random' distribution=distribution\_type ',' params+=KeyValue\_pair ')' ; \\
COMPLEX: '(' real=Composite\_type ',' imag=Composite\_type ')' ; \\
distribution\_type: 'gaussian' | 'binomial' | 'poisson' | 'uniform' ; \\
CaseFile: 'Case\_file' case\_file=STRING ; \\
Setup\_config: ProtectSystemConfig | ControllerConfig | TracerConfig ; \\
ProtectSystemConfig: BreakerConfig | RelayConfig ; \\
BreakerConfig: 'Breaker' id=Branch\_type ',' tto=Composite\_type ',' ttc=Composite\_type ; \\
RelayConfig: 'Relay' id=Branch\_type ',' type=Relay\_type ',' params+=Composite\_key\_pair ; \\
Relay\_type: 'Over-current' | 'Distance' | 'Differential' ; \\
Bus\_type: 'Bus' id=Composite\_type ; \\
Branch\_type: to\_bus=Bus\_type ',' from\_bus=Bus\_type ; \\
ControllerConfig: 'Controller' params+= Composite\_type ; \\
TracerConfig: 'Trace' metric+=Metric\_type ; \\
Metric\_type: 'Bus Voltages' | 'Power Flows' | 'Islands' ; \\
Precondition\_configs: LoadSetting | TripSetting | FaultSetting ; \\
LoadSetting: 'Load' id=Bus\_type ',' value=Composite\_type ; \\
TripSetting: 'Trip' id=Bus\_type ',' time=Composite\_type ; \\
FaultSetting: 'Fault' id=Bus\_type ',' time=Composite\_type ; \\
Attack\_scenario: attack\_sequence+=Attack ; \\
Attack: 'Attack' type=Attack\_type ',' time=Composite\_type ; \\
Attack\_type: GeneratorAttack | RelayAttack | BreakerAttack ; \\
GeneratorAttack: 'Gen' source=Bus\_type ',' type= 'Scaling' | 'Biasing' ',' factor=Composite\_type ; \\
RelayAttack: 'Relay' source=Branch\_type ',' type= 'Missed' | 'Spurious' ; \\
BreakerAttack: 'Breaker' source=Branch\_type ',' type= 'Stuck\_open' | 'Stuck\_close' ; \\
